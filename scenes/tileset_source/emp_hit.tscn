[gd_scene load_steps=8 format=2]

[ext_resource path="res://data/private/textures/arial10x10.png" type="Texture" id=1]
[ext_resource path="res://scripts/animations/emp_fx.gd" type="Script" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec4 c : hint_color;

vec2 uv_offset_from_seed(vec2 seed) {
	float u = floor(seed.x * 32.0) / 32.0;
	float v = floor(seed.y * 8.0) / 8.0;
	return vec2(u,v);
}


void fragment() {
	vec4 color = texture(TEXTURE, UV + uv_offset_from_seed(vec2(COLOR.r, COLOR.b)));
	COLOR = vec4(c.r, c.g, c.b, color.r * COLOR.a);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/c = Color( 0.14902, 0.709804, 0.301961, 1 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 10, 10 )

[sub_resource type="Gradient" id=4]
offsets = PoolRealArray( 0, 0.990099, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 1, 1, 1, 0.194719, 1, 1, 1, 0 )

[sub_resource type="Animation" id=5]
length = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath("area:emitting")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, true, false ]
}
tracks/1/type = "method"
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"values": [  ]
}

[node name="emp_hit_fx" type="Node2D"]
z_index = 1000
script = ExtResource( 2 )

[node name="area" type="CPUParticles2D" parent="."]
material = SubResource( 2 )
scale = Vector2( 2, 2 )
amount = 60
lifetime = 0.5
texture = SubResource( 3 )
emission_shape = 1
emission_sphere_radius = 35.14
direction = Vector2( 0, 1 )
spread = 180.0
gravity = Vector2( 0, 0 )
linear_accel = 77.12
angle = 360.0
angle_random = 1.0
scale_amount = 1.16
scale_amount_random = 0.39
color_ramp = SubResource( 4 )
hue_variation = 1.0
hue_variation_random = 1.0

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "boom"
anims/boom = SubResource( 5 )
[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
